# Additional Scalars
scalar DateTime
scalar EmailAddress
scalar URL

# Standard Types
type User {
  _id: ID!
  name: String
  email: EmailAddress
  hash: String
  avatar: URL
  createdAt: DateTime
  updatedAt: DateTime
}

# Input Types
input RegisterInput {
  name: String!
  email: EmailAddress!
  password: String!
  avatar: URL
}

input RegisterInput {
  name: String!
  email: EmailAddress!
  password: String!
  password2: String!
}

input LoginInput {
  email: EmailAddress!
  password: String!
}

input ForgetPWInput {
  email: EmailAddress!
}

input ResetPWInput {
  password: String!
  password2: String!
}

# Output Types
type ReturnUser {
  _id: ID!
  name: String
  email: EmailAddress
  avatar: URL
}

type ReturnResult {
  result: String
}

# Queries
type Query {
  current: ReturnUser!
}

# Mutations
type Mutation {
  register(input: RegisterInput!): ReturnUser!
  login(input: LoginInput!): ReturnUser!
  forgetpw(input: ForgetPWInput!): ReturnResult!
  resetpw(input: ResetPWInput!): ReturnResult!
}
